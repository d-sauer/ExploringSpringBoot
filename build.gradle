apply plugin: 'java'
apply plugin: 'spring-boot'
apply plugin: 'eclipse'
apply plugin: 'idea'

version =  '0.1.0'

jar {
  baseName = 'exploring-spring-boot'
  sourceCompatibility = 1.7
  targetCompatibility = 1.7
}

eclipse {
  jdt {
    sourceCompatibility = 1.7
    targetCompatibility = 1.7
  }
}
  
jar {
    baseName = project.name
}

repositories {
    mavenCentral()
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.2.2.RELEASE")
    }
}

// Project dependencies
dependencies {
    // tag::jetty[]
    compile("org.springframework.boot:spring-boot-starter-web") {
        exclude module: "spring-boot-starter-tomcat"
    }
    compile("org.springframework.boot:spring-boot-starter-jetty")

	compile('org.springframework.boot:spring-boot-autoconfigure')
	compile('org.springframework.boot:spring-boot-starter-data-jpa')
	compile('org.springframework.boot:spring-boot-starter-security')
	compile('org.hibernate:hibernate-validator')
	compile("javax.persistence:persistence-api:1.0")

    // for production, add actuator modules
    compile("org.springframework.boot:spring-boot-starter-actuator")

    compile('com.nimbusds:nimbus-jose-jwt:3.9')
    compile("com.fasterxml.jackson:jackson-parent:2.5")
    
    // Loging
    compile("org.slf4j:slf4j-api:1.7.10")
    compile("ch.qos.logback:logback-classic:1.1.2")
    compile("org.slf4j:jcl-over-slf4j:1.7.10")
    
    /*
     * Tests
    */
    testCompile("junit:junit")
    testCompile("org.springframework.boot:spring-boot-starter-test:1.2.2.RELEASE")
    testCompile("org.springframework:spring-test:2.5")
    
    
    runtime('com.h2database:h2')
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.2.1'
}

/*
 * Pack all dependencies
 */
task uberjar(type: Jar, dependsOn: [':compileJava', ':processResources']) {
    description 'Create UberJAR with all dependencies.'
    from { configurations.compile.collect { it.isDirectory() ? it : zipTree(it) } }
    exclude 'META-INF/*.RSA', 'META-INF/*.SF','META-INF/*.DSA'
    
    baseName = project.name + '-all'

    manifest {
        attributes 'Implementation-Version': version,
                   'Main-Class': 'hello.Application'
    }
    with jar
}